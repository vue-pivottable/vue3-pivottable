name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Debug Secret Storage
        run: |
          echo "Checking secret storage..."
          
          # Check if secrets are accessible
          if [ -z "$APP_ID" ]; then
            echo "ERROR: APP_ID is empty"
          else
            echo "✓ APP_ID exists (length: ${#APP_ID})"
          fi
          
          if [ -z "$PRIVATE_KEY" ]; then
            echo "ERROR: APP_PRIVATE_KEY is empty"
          else
            echo "✓ APP_PRIVATE_KEY exists (length: ${#PRIVATE_KEY})"
            
            # Check line count
            LINE_COUNT=$(echo "$PRIVATE_KEY" | wc -l)
            echo "  Private key line count: $LINE_COUNT"
            
            # Check if it's one line (might be base64 encoded or escaped)
            if [ "$LINE_COUNT" -eq 1 ]; then
              echo "  WARNING: Private key is on a single line"
              
              # Check if it contains literal \n
              if [[ "$PRIVATE_KEY" == *"\\n"* ]]; then
                echo "  Contains literal \\n - needs unescaping"
              fi
            fi
          fi
        env:
          APP_ID: ${{ secrets.APP_ID }}
          PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Generate GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.10.0'
          registry-url: 'https://registry.npmjs.org/'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          # This will create a PR with version bumps and changelog updates
          # When the PR is merged, it will publish to npm
          publish: pnpm release:packages
          version: pnpm changeset version
          commit: "chore: release packages"
          title: "chore: release packages"
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN_SUMIN: ${{ secrets.NPM_TOKEN_SUMIN }}

      # Alternative: Use semantic-release with GitHub App token
      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: |
      #     pnpm dlx semantic-release