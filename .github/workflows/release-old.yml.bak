name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.10.0'
          registry-url: 'https://registry.npmjs.org/'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Check for changesets
        id: changesets-check
        run: |
          if [ -n "$(ls -A .changeset/*.md 2>/dev/null | grep -v README.md)" ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release Branch
        if: steps.changesets-check.outputs.has_changesets == 'true'
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Create release branch
          RELEASE_BRANCH="release/v${CURRENT_VERSION}"
          git checkout -b $RELEASE_BRANCH
          
          # Apply changesets version updates
          pnpm changeset version
          
          # Get new version after changesets
          NEW_VERSION=$(node -p "require('./package.json').version")
          
          # If version changed, update branch name
          if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
            git branch -m "release/v${NEW_VERSION}"
            RELEASE_BRANCH="release/v${NEW_VERSION}"
          fi
          
          # Commit version changes
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: release v${NEW_VERSION}" || echo "No changes to commit"
          
          # Push release branch
          git push origin $RELEASE_BRANCH
          
          echo "release_branch=$RELEASE_BRANCH" >> $GITHUB_OUTPUT
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Build packages
        if: steps.changesets-check.outputs.has_changesets == 'true'
        run: pnpm build:all

      - name: Publish to npm
        if: steps.changesets-check.outputs.has_changesets == 'true'
        run: |
          # Use custom release script for fault-tolerant publishing
          node scripts/release-packages.js
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN_SUMIN: ${{ secrets.NPM_TOKEN_SUMIN }}

      - name: Create GitHub Release
        if: steps.changesets-check.outputs.has_changesets == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.release.outputs.version }}
          release_name: Release v${{ steps.release.outputs.version }}
          draft: false
          prerelease: false
          
      - name: Create sync PR to develop
        if: steps.changesets-check.outputs.has_changesets == 'true'
        run: |
          # Create PR from release branch to develop
          gh pr create \
            --base develop \
            --head ${{ steps.release.outputs.release_branch }} \
            --title "chore: sync release v${{ steps.release.outputs.version }} to develop" \
            --body "## ðŸ”„ Release Sync
          
          This PR syncs the following changes from release v${{ steps.release.outputs.version }}:
          - âœ… Version bumps
          - âœ… Consumed changesets (deleted)
          - âœ… Updated CHANGELOG.md files
          
          **Important**: Please review carefully and resolve any conflicts." \
            || echo "Sync PR creation skipped"