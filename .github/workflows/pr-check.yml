name: PR Check

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.10.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Run ESLint
        run: |
          echo "Linting main package..."
          pnpm lint
          echo "Linting all workspace packages..."
          pnpm -r lint || true  # Continue even if some packages don't have lint script

      - name: Run TypeScript type check
        run: |
          echo "Checking main package..."
          pnpm typecheck
          echo "Checking all workspace packages..."
          pnpm -r typecheck || true  # Continue even if some packages don't have typecheck script

      - name: Check for changesets
        run: |
          if [ -n "$(ls -A .changeset/*.md 2>/dev/null | grep -v README.md)" ]; then
            echo "✅ Changeset found"
          else
            echo "⚠️  No changeset found. Please add a changeset with 'pnpm changeset add'"
            echo "   This is required for all changes that affect published packages."
            exit 1
          fi

  build:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.10.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build all packages
        run: pnpm build:all

      - name: Check build output
        run: |
          # Check main package
          if [ ! -d "dist" ]; then
            echo "❌ Main package build output not found"
            exit 1
          fi
          
          # Check sub-packages
          for pkg in packages/*/; do
            if [ -d "$pkg" ] && [ -f "$pkg/package.json" ]; then
              if [ ! -d "$pkg/dist" ]; then
                echo "❌ Build output not found for $pkg"
                exit 1
              fi
            fi
          done
          
          echo "✅ All packages built successfully"