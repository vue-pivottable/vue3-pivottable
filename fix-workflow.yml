          # Check for version changes and update to beta
          TIMESTAMP=$(date +%s)
          CHANGED_PACKAGES=""
          
          # Function to ensure beta version
          ensure_beta_version() {
            local current_version=$1
            local timestamp=$2
            
            # If already has beta suffix, keep it
            if [[ "$current_version" == *"-beta."* ]]; then
              echo "$current_version"
            else
              # Add beta suffix
              echo "${current_version}-beta.${timestamp}"
            fi
          }
          
          # Check main package
          CURRENT_MAIN=$(node -p "require('./package.json').version")
          NEW_MAIN=$(ensure_beta_version "$CURRENT_MAIN" "$TIMESTAMP")
          
          # Always ensure beta version on develop branch
          if [ "$CURRENT_MAIN" != "$NEW_MAIN" ]; then
            npm version $NEW_MAIN --no-git-tag-version
            CHANGED_PACKAGES="vue-pivottable"
          fi
          
          # Check sub-packages
          for pkg in packages/*/; do
            if [ -d "$pkg" ] && [ -f "$pkg/package.json" ]; then
              cd "$pkg"
              PKG_NAME=$(basename "$pkg")
              CURRENT_VERSION=$(node -p "require('./package.json').version")
              NEW_VERSION=$(ensure_beta_version "$CURRENT_VERSION" "$TIMESTAMP")
              
              # Always ensure beta version on develop branch
              if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
                npm version $NEW_VERSION --no-git-tag-version
                CHANGED_PACKAGES="$CHANGED_PACKAGES $PKG_NAME"
              fi
              cd -
            fi
          done